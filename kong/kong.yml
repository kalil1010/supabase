_format_version: '2.1'
_transform: true
###
### Consumers / Users
###
consumers:
  - username: DASHBOARD
  - username: anon
    keyauth_credentials:
      - key: ${SUPABASE_ANON_KEY}
  - username: service_role
    keyauth_credentials:
      - key: ${SUPABASE_SERVICE_KEY}
###
### Access Control List
###
acls:
  - consumer: anon
    group: anon
  - consumer: service_role
    group: admin
###
### Dashboard credentials
###
basicauth_credentials:
  - consumer: DASHBOARD
    username: ${DASHBOARD_USERNAME}
    password: ${DASHBOARD_PASSWORD}
###
### API Routes
###
services:
  ## Open Auth routes
  - name: auth-v1-open
    url: http://${AUTH_HOST}:9999/verify
    routes:
      - name: auth-v1-open
        strip_path: true
        paths: [ /auth/v1/verify ]
    plugins:
      - name: cors
  - name: auth-v1-open-callback
    url: http://${AUTH_HOST}:9999/callback
    routes:
      - name: auth-v1-open-callback
        strip_path: true
        paths: [ /auth/v1/callback ]
    plugins:
      - name: cors
  - name: auth-v1-open-authorize
    url: http://${AUTH_HOST}:9999/authorize
    routes:
      - name: auth-v1-open-authorize
        strip_path: true
        paths: [ /auth/v1/authorize ]
    plugins:
      - name: cors
  ## Secure Auth (GoTrue)
  - name: auth-v1
    url: http://${AUTH_HOST}:9999/
    routes:
      - name: auth-v1-all
        strip_path: true
        paths: [ /auth/v1/ ]
    plugins:
      - name: cors
      - name: key-auth
        config:
          hide_credentials: false
      - name: acl
        config:
          hide_groups_header: true
          allow: [ admin, anon ]
  ## Secure REST (PostgREST)
  - name: rest-v1
    url: http://${REST_HOST}:3000/
    routes:
      - name: rest-v1-all
        strip_path: true
        paths: [ /rest/v1/ ]
    plugins:
      - name: cors
      - name: key-auth
        config:
          hide_credentials: true
      - name: acl
        config:
          hide_groups_header: true
          allow: [ admin, anon ]
  ## GraphQL
  - name: graphql-v1
    url: http://${REST_HOST}:3000/rpc/graphql
    routes:
      - name: graphql-v1-all
        strip_path: true
        paths: [ /graphql/v1 ]
    plugins:
      - name: cors
      - name: key-auth
        config:
          hide_credentials: true
      - name: request-transformer
        config:
          add:
            headers:
              - Content-Profile:graphql_public
      - name: acl
        config:
          hide_groups_header: true
          allow: [ admin, anon ]
  ## Realtime (WebSocket)
  - name: realtime-v1-ws
    url: http://${REALTIME_HOST}:4000/socket
    protocol: ws
    routes:
      - name: realtime-v1-ws
        strip_path: true
        paths: [ /realtime/v1/ ]
    plugins:
      - name: cors
      - name: key-auth
        config:
          hide_credentials: false
      - name: acl
        config:
          hide_groups_header: true
          allow: [ admin, anon ]
  ## Realtime (HTTP)
  - name: realtime-v1-rest
    url: http://${REALTIME_HOST}:4000/api
    protocol: http
    routes:
      - name: realtime-v1-rest
        strip_path: true
        paths: [ /realtime/v1/api ]
    plugins:
      - name: cors
      - name: key-auth
        config:
          hide_credentials: false
      - name: acl
        config:
          hide_groups_header: true
          allow: [ admin, anon ]
  ## Storage API passthrough
  - name: storage-v1
    host: ${STORAGE_API_HOST}
    port: ${MINIO_PRIVATE_PORT}
    protocol: http
    routes:
      - name: storage-v1-all
        strip_path: true
        paths: [ /storage/v1/ ]
    plugins:
      - name: cors
  ## Studio helper: buckets
  - name: platform-storage-buckets
    url: http://${STORAGE_API_HOST}:${MINIO_PRIVATE_PORT}/storage/v1/buckets
    routes:
      - name: platform-storage-buckets-route
        strip_path: true
        methods: [ GET, POST, OPTIONS ]
        paths: [ /api/platform/storage/default/buckets ]
  ## Analytics
  - name: analytics-v1
    url: http://${ANALYTICS_HOST}:4000/
    routes:
      - name: analytics-v1-all
        strip_path: true
        paths: [ /analytics/v1/ ]
  ## Meta (pg-meta)
  - name: meta
    url: http://${META_HOST}:8080/
    routes:
      - name: meta-all
        strip_path: true
        paths: [ /pg/ ]
    plugins:
      - name: key-auth
        config:
          hide_credentials: false
      - name: acl
        config:
          hide_groups_header: true
          allow: [ admin ]
  ## Studio catch-all
  - name: dashboard
    url: http://${STUDIO_HOST}:3000/
    routes:
      - name: dashboard-all
        strip_path: true
        paths: [ / ]
    plugins:
      - name: cors
      - name: basic-auth
        config:
          hide_credentials: true
